{"ast":null,"code":"import \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport Header from '/src/components/header.vue';\nimport BaiduMap from '/src/components/BaiduMap.vue';\nexport default {\n  computed: {\n    containerHeight: function containerHeight() {\n      return \"\".concat(window.innerHeight - 100, \"px\");\n    },\n    mapLocations: function mapLocations() {\n      var _this = this;\n      return this.data.map(function (item) {\n        return {\n          name: item.location,\n          lng: _this.getGeolocation(item.location).lng,\n          lat: _this.getGeolocation(item.location).lat\n        };\n      });\n    }\n  },\n  components: {\n    search: Header,\n    BaiduMap: BaiduMap\n  },\n  data: function data() {\n    return {\n      data: []\n    };\n  },\n  mounted: function mounted() {\n    this.generateData();\n  },\n  methods: {\n    generateData: function generateData() {\n      // Generate 20 different data items and assign them to the `data` array\n      var cities = [\"北京\", \"上海\", \"广州\", \"深圳\", \"杭州\", \"成都\", \"重庆\", \"武汉\", \"南京\", \"西安\", \"天津\", \"苏州\", \"长沙\", \"郑州\", \"青岛\", \"大连\", \"宁波\", \"厦门\", \"哈尔滨\", \"济南\"];\n      for (var i = 1; i <= 20; i++) {\n        this.data.push({\n          id: i,\n          image: \"image-\".concat(i, \".jpg\"),\n          name: \"User \".concat(i),\n          // rating: (Math.random() * 5).toFixed(1),\n          location: cities[i - 1],\n          loc_detail: cities[i - 1],\n          //`Location Detail ${i}`,\n          tel: \"Telephone \".concat(i)\n        });\n      }\n    },\n    getGeolocation: function getGeolocation(address) {\n      // Perform geocoding here and return the latitude and longitude\n      // Replace this function with the actual geocoding logic using Baidu Map API or any other geocoding service\n      // The example below shows a hardcoded geolocation for demonstration purposes\n      var geolocation = {\n        北京: {\n          lat: 39.9042,\n          lng: 116.4074\n        },\n        上海: {\n          lat: 31.2304,\n          lng: 121.4737\n        },\n        广州: {\n          lat: 23.1291,\n          lng: 113.2644\n        }\n        // Add geolocation coordinates for other cities\n      };\n\n      return geolocation[address] || {\n        lat: 0,\n        lng: 0\n      }; // Return (0,0) for unknown addresses\n    },\n    hoverImage: function hoverImage(id, isHover) {\n      var cardImage = document.getElementById(\"card-image-\".concat(id));\n      if (cardImage) {\n        cardImage.style.filter = isHover ? 'brightness(70%)' : 'none';\n      }\n    }\n  }\n};","map":{"version":3,"names":["Header","BaiduMap","computed","containerHeight","concat","window","innerHeight","mapLocations","_this","data","map","item","name","location","lng","getGeolocation","lat","components","search","mounted","generateData","methods","cities","i","push","id","image","loc_detail","tel","address","geolocation","北京","上海","广州","hoverImage","isHover","cardImage","document","getElementById","style","filter"],"sources":["C:\\Users\\56806\\Desktop\\DBDesign\\src\\views\\home\\CenterPage\\CenterPage.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <search/>\r\n      <div>\r\n        <div class=\"container\">\r\n          <el-scrollbar class=\"scrollbar\" :height=\"containerHeight\">\r\n            <div class=\"scrollbar-container\">\r\n              <el-card v-for=\"item in data\" :key=\"item.id\" class=\"card-item\">\r\n                <div class=\"card-content\">\r\n                  <div class=\"card-left\">\r\n                    <img\r\n                      :src=\"item.image\"\r\n                      class=\"card-image\"\r\n                      @mouseover=\"hoverImage(item.id, true)\"\r\n                      @mouseleave=\"hoverImage(item.id, false)\"\r\n                    />\r\n                    <el-button class=\"card-button\" type=\"primary\">详情</el-button>\r\n                  </div>\r\n                  <div class=\"card-right\">\r\n                    <el-descriptions title=\"Customized style list\" :column=\"1\" border>\r\n                      <el-descriptions-item label=\"ID\" label-align=\"right\" align=\"center\">{{ item.id }}</el-descriptions-item>\r\n                      <el-descriptions-item label=\"Name\" label-align=\"right\" align=\"center\">{{ item.name }}</el-descriptions-item>\r\n                      <el-descriptions-item label=\"Location Detail\" label-align=\"right\" align=\"center\">{{ item.loc_detail }}</el-descriptions-item>\r\n                      <el-descriptions-item label=\"Telephone\" label-align=\"right\" align=\"center\">{{ item.tel }}</el-descriptions-item>\r\n                    </el-descriptions>\r\n                  </div>\r\n                </div>\r\n              </el-card>\r\n            </div>\r\n          </el-scrollbar>\r\n          <div class=\"map-container\">\r\n            <BaiduMap :locations=\"mapLocations\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n</template>\r\n  \r\n<script>\r\n  import Header from '/src/components/header.vue'\r\n  import BaiduMap from '/src/components/BaiduMap.vue';\r\n  \r\n  export default {\r\n    computed: {\r\n      containerHeight() {\r\n        return `${window.innerHeight - 100}px`;\r\n      },\r\n      mapLocations() {\r\n        return this.data.map(item => ({\r\n          name: item.location,\r\n          lng: this.getGeolocation(item.location).lng,\r\n          lat: this.getGeolocation(item.location).lat\r\n        }));\r\n      }\r\n    },\r\n    components: {\r\n      search: Header,\r\n      BaiduMap,\r\n    },\r\n    data() {\r\n      return {\r\n        data: [],\r\n      };\r\n    },\r\n    mounted() {\r\n      this.generateData();\r\n    },\r\n    methods: {\r\n      generateData() {\r\n        // Generate 20 different data items and assign them to the `data` array\r\n        const cities = [\r\n          \"北京\",\r\n          \"上海\",\r\n          \"广州\",\r\n          \"深圳\",\r\n          \"杭州\",\r\n          \"成都\",\r\n          \"重庆\",\r\n          \"武汉\",\r\n          \"南京\",\r\n          \"西安\",\r\n          \"天津\",\r\n          \"苏州\",\r\n          \"长沙\",\r\n          \"郑州\",\r\n          \"青岛\",\r\n          \"大连\",\r\n          \"宁波\",\r\n          \"厦门\",\r\n          \"哈尔滨\",\r\n          \"济南\",\r\n        ];\r\n  \r\n        for (let i = 1; i <= 20; i++) {\r\n          this.data.push({\r\n            id: i,\r\n            image: `image-${i}.jpg`,\r\n            name: `User ${i}`,\r\n            // rating: (Math.random() * 5).toFixed(1),\r\n            location: cities[i - 1],\r\n            loc_detail: cities[i - 1],//`Location Detail ${i}`,\r\n            tel: `Telephone ${i}`\r\n          });\r\n        }\r\n      },\r\n      getGeolocation(address) {\r\n        // Perform geocoding here and return the latitude and longitude\r\n        // Replace this function with the actual geocoding logic using Baidu Map API or any other geocoding service\r\n        // The example below shows a hardcoded geolocation for demonstration purposes\r\n        const geolocation = {\r\n          北京: { lat: 39.9042, lng: 116.4074 },\r\n          上海: { lat: 31.2304, lng: 121.4737 },\r\n          广州: { lat: 23.1291, lng: 113.2644 },\r\n          // Add geolocation coordinates for other cities\r\n        };\r\n        return geolocation[address] || { lat: 0, lng: 0 }; // Return (0,0) for unknown addresses\r\n      },\r\n      hoverImage(id, isHover) {\r\n        const cardImage = document.getElementById(`card-image-${id}`);\r\n        if (cardImage) {\r\n          cardImage.style.filter = isHover ? 'brightness(70%)' : 'none';\r\n        }\r\n      },\r\n    },\r\n  };\r\n</script>\r\n  \r\n  <style scoped>\r\n  .container {\r\n    display: flex;\r\n  }\r\n  \r\n  .scrollbar {\r\n    flex: 1;\r\n    height: calc(100vh - 100px); /* 调整滚动框高度，保留页眉高度 */\r\n    margin-right: 20px; /* 调整滚动框与地图的间距 */\r\n  }\r\n  \r\n  .scrollbar-container {\r\n    width: 1000px; /* 设置容器宽度为 1000px */\r\n    height: 100%;\r\n    overflow-y: auto;\r\n  }\r\n  \r\n  .card-item {\r\n    margin-bottom: 10px; /* 调整卡片之间的间距 */\r\n    box-shadow: 0 5px 10px rgba(0, 0, 0, 0.1); /* 添加阴影效果 */\r\n  }\r\n  \r\n  .card-content {\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n  \r\n  .card-left {\r\n    flex: 1;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n  }\r\n  \r\n  .card-right {\r\n    flex: 2;\r\n    padding-left: 20px;\r\n  }\r\n  \r\n  .card-image {\r\n    width: 200px;\r\n    height: 200px;\r\n    object-fit: cover;\r\n    transition: filter 0.3s ease-in-out;\r\n  }\r\n  \r\n  .card-button {\r\n    margin-top: 12px;\r\n  }\r\n  \r\n  .my-label {\r\n    background: var(--el-color-success-light-9);\r\n  }\r\n  \r\n  .my-content {\r\n    background: var(--el-color-danger-light-9);\r\n  }\r\n  \r\n  .map-container {\r\n    width: 600px;\r\n    height: 850px;\r\n    border: 2px solid #ccc; /* Add a border style */\r\n    border-radius: 5px; /* Optional: Add border radius */\r\n    padding: 10px; /* Optional: Add padding */\r\n  }\r\n  </style>\r\n  "],"mappings":";;;;AAuCE,OAAOA,MAAK,MAAO,4BAA2B;AAC9C,OAAOC,QAAO,MAAO,8BAA8B;AAEnD,eAAe;EACbC,QAAQ,EAAE;IACRC,eAAe,WAAAA,gBAAA,EAAG;MAChB,UAAAC,MAAA,CAAUC,MAAM,CAACC,WAAU,GAAI,GAAG;IACpC,CAAC;IACDC,YAAY,WAAAA,aAAA,EAAG;MAAA,IAAAC,KAAA;MACb,OAAO,IAAI,CAACC,IAAI,CAACC,GAAG,CAAC,UAAAC,IAAG;QAAA,OAAM;UAC5BC,IAAI,EAAED,IAAI,CAACE,QAAQ;UACnBC,GAAG,EAAEN,KAAI,CAACO,cAAc,CAACJ,IAAI,CAACE,QAAQ,CAAC,CAACC,GAAG;UAC3CE,GAAG,EAAER,KAAI,CAACO,cAAc,CAACJ,IAAI,CAACE,QAAQ,CAAC,CAACG;QAC1C,CAAC;MAAA,CAAC,CAAC;IACL;EACF,CAAC;EACDC,UAAU,EAAE;IACVC,MAAM,EAAElB,MAAM;IACdC,QAAQ,EAARA;EACF,CAAC;EACDQ,IAAI,WAAAA,KAAA,EAAG;IACL,OAAO;MACLA,IAAI,EAAE;IACR,CAAC;EACH,CAAC;EACDU,OAAO,WAAAA,QAAA,EAAG;IACR,IAAI,CAACC,YAAY,CAAC,CAAC;EACrB,CAAC;EACDC,OAAO,EAAE;IACPD,YAAY,WAAAA,aAAA,EAAG;MACb;MACA,IAAME,MAAK,GAAI,CACb,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,KAAK,EACL,IAAI,CACL;MAED,KAAK,IAAIC,CAAA,GAAI,CAAC,EAAEA,CAAA,IAAK,EAAE,EAAEA,CAAC,EAAE,EAAE;QAC5B,IAAI,CAACd,IAAI,CAACe,IAAI,CAAC;UACbC,EAAE,EAAEF,CAAC;UACLG,KAAK,WAAAtB,MAAA,CAAWmB,CAAC,SAAM;UACvBX,IAAI,UAAAR,MAAA,CAAUmB,CAAC,CAAE;UACjB;UACAV,QAAQ,EAAES,MAAM,CAACC,CAAA,GAAI,CAAC,CAAC;UACvBI,UAAU,EAAEL,MAAM,CAACC,CAAA,GAAI,CAAC,CAAC;UAAC;UAC1BK,GAAG,eAAAxB,MAAA,CAAemB,CAAC;QACrB,CAAC,CAAC;MACJ;IACF,CAAC;IACDR,cAAc,WAAAA,eAACc,OAAO,EAAE;MACtB;MACA;MACA;MACA,IAAMC,WAAU,GAAI;QAClBC,EAAE,EAAE;UAAEf,GAAG,EAAE,OAAO;UAAEF,GAAG,EAAE;QAAS,CAAC;QACnCkB,EAAE,EAAE;UAAEhB,GAAG,EAAE,OAAO;UAAEF,GAAG,EAAE;QAAS,CAAC;QACnCmB,EAAE,EAAE;UAAEjB,GAAG,EAAE,OAAO;UAAEF,GAAG,EAAE;QAAS;QAClC;MACF,CAAC;;MACD,OAAOgB,WAAW,CAACD,OAAO,KAAK;QAAEb,GAAG,EAAE,CAAC;QAAEF,GAAG,EAAE;MAAE,CAAC,EAAE;IACrD,CAAC;IACDoB,UAAU,WAAAA,WAACT,EAAE,EAAEU,OAAO,EAAE;MACtB,IAAMC,SAAQ,GAAIC,QAAQ,CAACC,cAAc,eAAAlC,MAAA,CAAeqB,EAAE,CAAE,CAAC;MAC7D,IAAIW,SAAS,EAAE;QACbA,SAAS,CAACG,KAAK,CAACC,MAAK,GAAIL,OAAM,GAAI,iBAAgB,GAAI,MAAM;MAC/D;IACF;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}