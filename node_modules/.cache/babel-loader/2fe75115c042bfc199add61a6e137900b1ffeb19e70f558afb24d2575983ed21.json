{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createTextVNode as _createTextVNode, openBlock as _openBlock, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nvar _withScopeId = function _withScopeId(n) {\n  return _pushScopeId(\"data-v-736973a6\"), n = n(), _popScopeId(), n;\n};\nvar _hoisted_1 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"h1\", {\n    \"class\": \"login-title\"\n  }, \"登录\", -1 /* HOISTED */);\n});\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_ElInput = _resolveComponent(\"ElInput\");\n  var _component_ElFormItem = _resolveComponent(\"ElFormItem\");\n  var _component_el_input = _resolveComponent(\"el-input\");\n  var _component_ElButton = _resolveComponent(\"ElButton\");\n  var _component_ElForm = _resolveComponent(\"ElForm\");\n  return _openBlock(), _createBlock(_component_ElForm, {\n    \"class\": \"login-form\",\n    ref: \"loginForm\",\n    model: $data.loginForm,\n    rules: $data.rules\n  }, {\n    \"default\": _withCtx(function () {\n      return [_hoisted_1, _createVNode(_component_ElFormItem, {\n        prop: \"username\"\n      }, {\n        \"default\": _withCtx(function () {\n          return [_createVNode(_component_ElInput, {\n            placeholder: \"请输入账号\",\n            \"prefix-icon\": $data.icons.UserFilled,\n            modelValue: $data.loginForm.username,\n            \"onUpdate:modelValue\": _cache[0] || (_cache[0] = function ($event) {\n              return $data.loginForm.username = $event;\n            }),\n            size: \"large\"\n          }, null, 8 /* PROPS */, [\"prefix-icon\", \"modelValue\"])];\n        }),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_ElFormItem, {\n        prop: \"password\"\n      }, {\n        \"default\": _withCtx(function () {\n          return [_createVNode(_component_el_input, {\n            placeholder: \"请输入密码\",\n            \"prefix-icon\": $data.icons.Lock,\n            modelValue: $data.loginForm.password,\n            \"onUpdate:modelValue\": _cache[1] || (_cache[1] = function ($event) {\n              return $data.loginForm.password = $event;\n            }),\n            size: \"large\"\n          }, null, 8 /* PROPS */, [\"prefix-icon\", \"modelValue\"])];\n        }),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_ElFormItem, null, {\n        \"default\": _withCtx(function () {\n          return [_createVNode(_component_ElButton, {\n            type: \"primary\",\n            \"class\": \"login-btn\",\n            size: \"large\",\n            onClick: _cache[2] || (_cache[2] = function ($event) {\n              return _ctx.submitForm('loginForm');\n            })\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createTextVNode(\"登录\")];\n            }),\n            _: 1 /* STABLE */\n          })];\n        }),\n\n        _: 1 /* STABLE */\n      })];\n    }),\n\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"model\", \"rules\"]);\n}","map":{"version":3,"names":["_createElementVNode","_createBlock","_component_ElForm","ref","model","$data","loginForm","rules","_hoisted_1","_createVNode","_component_ElFormItem","prop","_component_ElInput","placeholder","icons","UserFilled","username","$event","size","_component_el_input","Lock","password","_component_ElButton","type","onClick","_cache","_ctx","submitForm"],"sources":["D:\\大二下\\数据库小学期\\gyy\\DBDesign-main\\src\\views\\login_register\\login.vue"],"sourcesContent":["<template>\r\n  <ElForm class=\"login-form\" ref=\"loginForm\" :model=\"loginForm\" :rules=\"rules\">\r\n    <h1 class=\"login-title\">登录</h1>\r\n    <ElFormItem prop=\"username\">\r\n      <ElInput placeholder=\"请输入账号\" :prefix-icon=\"icons.UserFilled\"  v-model=\"loginForm.username\" size=\"large\"></ElInput>\r\n    </ElFormItem>\r\n    <ElFormItem prop=\"password\">\r\n      <el-input placeholder=\"请输入密码\" :prefix-icon=\"icons.Lock\" v-model=\"loginForm.password\" size=\"large\"></el-input>\r\n    </ElFormItem>\r\n    <ElFormItem>\r\n      <ElButton type=\"primary\" class=\"login-btn\" size=\"large\" @click=\"submitForm('loginForm')\">登录</ElButton>\r\n    </ElFormItem>\r\n  </ElForm>\r\n</template>\r\n\r\n<script>\r\nimport * as icons from '@element-plus/icons-vue';\r\nexport default {\r\n  // eslint-disable-next-line vue/multi-word-component-names\r\n  name: \"Login\",\r\n  data() {\r\n    return {\r\n      icons: icons,\r\n      // 表单信息\r\n      loginForm: {\r\n        // 账户数据\r\n        username: \"\",\r\n        // 密码数据\r\n        password: \"\",\r\n        \r\n        // 验证码数据\r\n        code: \"\",\r\n        // 记住密码\r\n        remember: false,\r\n        // 验证码的key，因为前后端分离，这里验证码不能由后台存入session，所以交给vue状态管理\r\n        codeToken: \"\",\r\n      },\r\n      // 表单验证\r\n      rules: {\r\n        // 设置账户效验规则\r\n        username: [\r\n          { required: true, message: \"请输入账户\", trigger: \"blur\" },\r\n          { min: 3, max: 10, message: \"长度在 3 到 10 个字符的账户\", trigger: \"blur\" },\r\n        ],\r\n        // 设置密码效验规则\r\n        password: [\r\n          { required: true, message: \"请输入密码\", trigger: \"blur\" },\r\n          { min: 6, max: 15, message: \"长度在 6 到 15 个字符的密码\", trigger: \"blur\" },\r\n        ],\r\n        // 设置验证码效验规则\r\n        code: [\r\n          { required: true, message: \"请输入验证码\", trigger: \"blur\" },\r\n          { min: 5, max: 5, message: \"长度为 5 个字符\", trigger: \"blur\" },\r\n        ],\r\n      },\r\n      // 绑定验证码图片\r\n      codeImg: null,\r\n      // 后端提供的URL\r\n      apiUrl: \"/api/login\",\r\n    };\r\n  },\r\n  methods: {\r\n    // 提交表单\r\n  },\r\n\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.login-form {\r\n  grid-column: 1;\r\n  grid-row: 1;\r\n  opacity: 1;\r\n  transition: 1s ease-in-out;\r\n  transition-delay: 0.5s;\r\n  /* 上下 | 左右 */\r\n  padding: 1% 25%;\r\n  z-index: 1;\r\n}\r\n\r\n.login-form.sign-up-model {\r\n  opacity: 0;\r\n  transition: 1s ease-in-out;\r\n  z-index: 0;\r\n}\r\n\r\n.login-title {\r\n  \r\n  /*设置字体*/\r\n  font-size: 60px;\r\n  /*设置字体大小*/\r\n  font-weight: bolder;\r\n  /*设置字体粗细*/\r\n \r\n  /*文字描边*/\r\ncolor: #5c9ef5;\r\n  /*设置文字的填充颜色*/\r\n\r\n  font-size: 50px;\r\n  text-align: center;\r\n\r\n}\r\n\r\n.login-btn {\r\n  width: 100%;\r\n  font-size: 18px;\r\n}</style>\r\n"],"mappings":";;;;;sBAEIA,mBAAA,CAA+B;IAA3B,SAAM;EAAa,GAAC,IAAE;AAAA;;;;;;;;uBAD5BC,YAAA,CAWSC,iBAAA;IAXD,SAAM,YAAY;IAACC,GAAG,EAAC,WAAW;IAAEC,KAAK,EAAEC,KAAA,CAAAC,SAAS;IAAGC,KAAK,EAAEF,KAAA,CAAAE;;wBACpE;MAAA,OAA+B,CAA/BC,UAA+B,EAC/BC,YAAA,CAEaC,qBAAA;QAFDC,IAAI,EAAC;MAAU;4BACzB;UAAA,OAAkH,CAAlHF,YAAA,CAAkHG,kBAAA;YAAzGC,WAAW,EAAC,OAAO;YAAE,aAAW,EAAER,KAAA,CAAAS,KAAK,CAACC,UAAU;wBAAYV,KAAA,CAAAC,SAAS,CAACU,QAAQ;;qBAAlBX,KAAA,CAAAC,SAAS,CAACU,QAAQ,GAAAC,MAAA;YAAA;YAAEC,IAAI,EAAC;;;;UAElGT,YAAA,CAEaC,qBAAA;QAFDC,IAAI,EAAC;MAAU;4BACzB;UAAA,OAA6G,CAA7GF,YAAA,CAA6GU,mBAAA;YAAnGN,WAAW,EAAC,OAAO;YAAE,aAAW,EAAER,KAAA,CAAAS,KAAK,CAACM,IAAI;wBAAWf,KAAA,CAAAC,SAAS,CAACe,QAAQ;;qBAAlBhB,KAAA,CAAAC,SAAS,CAACe,QAAQ,GAAAJ,MAAA;YAAA;YAAEC,IAAI,EAAC;;;;UAE5FT,YAAA,CAEaC,qBAAA;4BADX;UAAA,OAAsG,CAAtGD,YAAA,CAAsGa,mBAAA;YAA5FC,IAAI,EAAC,SAAS;YAAC,SAAM,WAAW;YAACL,IAAI,EAAC,OAAO;YAAEM,OAAK,EAAAC,MAAA,QAAAA,MAAA,gBAAAR,MAAA;cAAA,OAAES,IAAA,CAAAC,UAAU;YAAA;;gCAAe;cAAA,OAAE,C,iBAAF,IAAE,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}